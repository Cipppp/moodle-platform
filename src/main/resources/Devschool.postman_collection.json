{
	"info": {
		"_postman_id": "3704b860-c658-4252-98fa-6579056803b4",
		"name": "Devschool",
		"description": "This template contains a boilerplate for documentation that you can quickly customize and reuse.\n\n### How to use this template:\n\n- Replace the content given brackets (()) with your API's details.\n- Tips are formatted in `codespan` - feel free to read and remove them.\n    \n\n---\n\n`Start with a brief overview of what your API offers.`\n\nThe ((product name)) provides many API products, tools, and resources that enable you to ((add product value here)).\n\n`You can also list the APIs you offer, link to the relevant pages, or do both in this section.`\n\n## **Getting started guide**\n\n`List the steps or points required to start using your APIs. Make sure to cover everything required to reach success with your API as quickly as possible.`\n\nTo start using the ((add APIs here)), you need to -\n\n`The points given below are from The Postman API's documentation. You can reference it to write your own getting started guide.`\n\n- You must use a valid API Key to send requests to the API endpoints. You can get your API key from Postman's [integrations dashboard](https://go.postman.co/settings/me/api-keys).\n- The API has [rate and usage limits](https://postman.postman.co/workspace/Collection-Templates~6311738d-2e70-441f-ae12-78caf078c5b7/collection/22517504-e9c28f47-1253-44af-a2f3-20dce4da1f18?ctx=documentation#rate-and-usage-limits).\n- The API only responds to HTTPS-secured communications. Any requests sent via HTTP return an HTTP 301 redirect to the corresponding HTTPS resources.\n- The API returns request responses in JSON format. When an API request returns an error, it is sent in the JSON response as an error key.\n    \n\n## Authentication\n\n`Add details on the authorization keys/tokens required, steps that cover how to get them, and the relevant error codes.`\n\nThe ((product name)) API uses ((add your API's authorization type)) for authentication.\n\n`The details given below are from the Postman API's documentation. You can reference it to write your own authentication section.`\n\nPostman uses API keys for authentication. You can generate a Postman API key in the [API keys](https://postman.postman.co/settings/me/api-keys) section of your Postman account settings.\n\nYou must include an API key in each request to the Postman API with the X-Api-Key request header.\n\n### Authentication error response\n\nIf an API key is missing, malformed, or invalid, you will receive an HTTP 401 Unauthorized response code.\n\n## Rate and usage limits\n\n`Use this section to cover your APIs' terms of use. Include API limits, constraints, and relevant error codes, so consumers understand the permitted API usage and practices.`\n\n`The example given below is from The Postman API's documentation. Use it as a reference to write your APIs' terms of use.`\n\nAPI access rate limits apply at a per-API key basis in unit time. The limit is 300 requests per minute. Also, depending on your plan, you may have usage limits. If you exceed either limit, your request will return an HTTP 429 Too Many Requests status code.\n\nEach API response returns the following set of headers to help you identify your use status:\n\n| Header | Description |\n| --- | --- |\n| `X-RateLimit-Limit` | The maximum number of requests that the consumer is permitted to make per minute. |\n| `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window. |\n| `X-RateLimit-Reset` | The time at which the current rate limit window resets in UTC epoch seconds. |\n\n### 503 response\n\nAn HTTP `503` response from our servers indicates there is an unexpected spike in API access traffic. The server is usually operational within the next five minutes. If the outage persists or you receive any other form of an HTTP `5XX` error, [contact support](https://support.postman.com/hc/en-us/requests/new/).\n\n### **Need some help?**\n\n`Add links that customers can refer to whenever they need help.`\n\nIn case you have questions, go through our tutorials ((link to your video or help documentation here)). Or visit our FAQ page ((link to the relevant page)).\n\nOr you can check out our community forum, thereâ€™s a good chance our community has an answer for you. Visit our developer forum ((link to developer forum)) to review topics, ask questions, and learn from others.\n\n`You can also document or add links to libraries, code examples, and other resources needed to make a request.`",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16803344",
		"_collection_link": "https://team-name123.postman.co/workspace/DevSchool~1ddf4e48-b5e9-44d8-859c-a30dc00aaaa0/collection/10665533-3704b860-c658-4252-98fa-6579056803b4?action=share&source=collection_link&creator=16803344"
	},
	"item": [
		{
			"name": "Basic Requests",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Create student",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"student2\",\n    \"fullName\": \"student2\",\n    \"email\": \"student2@gmail.com\",\n    \"phoneNumber\": \"0774657614\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/register/student",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register",
										"student"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create teacher",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher4\",\n    \"fullName\": \"teacher4\",\n    \"email\": \"teacher4@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/register/teacher",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register",
										"teacher"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login teacher",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher4\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login student",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"student1\",\r\n    \"password\": \"123123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Course",
					"item": [
						{
							"name": "Get all courses (S + T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/courses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get enrolled students (S + T))",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/courses/2/students?graded=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"2",
										"students"
									],
									"query": [
										{
											"key": "graded",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get course details (S + T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/courses/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Enrollment Request",
					"item": [
						{
							"name": "Create enrollment request (S)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/enrollment-requests/4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"enrollment-requests",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get enrolment requests for student (S)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/students/me/enrollment-requests?status=PENDING",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"students",
										"me",
										"enrollment-requests"
									],
									"query": [
										{
											"key": "status",
											"value": "PENDING"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get enrolment requests for course (T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/courses/2/enrollment-requests?status=PENDING",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"2",
										"enrollment-requests"
									],
									"query": [
										{
											"key": "status",
											"value": "PENDING"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update enrollment request status (T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": \"ACCEPTED\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/enrollment-requests/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"enrollment-requests",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete enrollment request (S)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/enrollment-requests/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"enrollment-requests",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Grade",
					"item": [
						{
							"name": "Add grade (T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"courseId\": \"1\",\n    \"studentId\": \"1\",\n    \"score\": 10\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/grades",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"grades"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update grade (T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"score\": 9.5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/grades/100",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"grades",
										"100"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get grades for course (T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/courses/1/grades?lowerBound=&upperBound=",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"1",
										"grades"
									],
									"query": [
										{
											"key": "lowerBound",
											"value": ""
										},
										{
											"key": "upperBound",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get grade (T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/grades/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"grades",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Schedule",
					"item": [
						{
							"name": "Create schedule (T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"schedule2_seminary\",\r\n    \"startDate\": \"27.11.2020\",\r\n    \"endDate\": \"27.07.2020\",\r\n    \"weekDay\": \"FRI\",\r\n    \"startTime\": \"10:00\",\r\n    \"endTime\": \"11:50\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses/1/schedules",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"1",
										"schedules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all schedules (S + T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/schedules",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"schedules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update schedule (T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/schedules/14",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"schedules",
										"14"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all schedules for course (S + T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/courses/1/schedules",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"1",
										"schedules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all schedules for student (S)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/students/me/schedules",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"students",
										"me",
										"schedules"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User",
					"item": [
						{
							"name": "Get current user",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/me",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update current user",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"teacher6\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/me",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Course-Teacher",
					"item": [
						{
							"name": "Add course (T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"poo\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 29,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"lab\",\n\t\t\t\"startDate\": \"22.11.2026\",\n\t\t\t\"endDate\": \"23.11.2026\",\n\t\t\t\"weekDay\": 3,\n\t\t\t\"startTime\": \"12:00\",\n\t\t\t\"endTime\": \"14:00\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update course (T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"POO\",\n    \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses/14",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"14"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all created courses (T)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/courses/created",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"created"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Course-Student",
					"item": [
						{
							"name": "Get courses enrolled to (S)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/courses/enrolled",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"enrolled"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get courses for student (S)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/courses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Swagger",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{teacherJwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/swagger-ui.html",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"swagger-ui.html"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Flows",
			"item": [
				{
					"name": "1. User Details",
					"item": [
						{
							"name": "Create teacher_10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_10\",\n    \"fullName\": \"teacher_10\",\n    \"email\": \"teacher_10@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/register/teacher",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register",
										"teacher"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create teacher_11",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_11\",\n    \"fullName\": \"teacher_11\",\n    \"email\": \"teacher_11@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/register/teacher",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register",
										"teacher"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login teacher_10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_10\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get current user details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    var jsonData = pm.response.json();\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/me",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update my details - invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    var jsonData = pm.response.json();\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"teacher_10_updated\",\r\n    \"fullName\": \"teacher_10_updated\",\r\n    \"email\": \"@gmailcom\",\r\n    \"phoneNumber\": \"+0724528173\",\r\n    \"password\": 123123\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/me",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update my details - invalid phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    var jsonData = pm.response.json();\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"teacher_10_updated\",\r\n    \"fullName\": \"teacher_10_updated\",\r\n    \"email\": \"teacher_10_updated@gmail.com\",\r\n    \"phoneNumber\": \"+08173\",\r\n    \"password\": 123123\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/me",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update my details - existing email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    var jsonData = pm.response.json();\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"teacher_10_updated\",\r\n    \"fullName\": \"teacher_10_updated\",\r\n    \"email\": \"teacher_11@gmail.com\",\r\n    \"phoneNumber\": \"+0724528173\",\r\n    \"password\": 123123\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/me",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update my details - existing username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    var jsonData = pm.response.json();\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"teacher_11\",\r\n    \"fullName\": \"teacher_10_updated\",\r\n    \"email\": \"teacher_10_updated@gmail.com\",\r\n    \"phoneNumber\": \"+0724528173\",\r\n    \"password\": 123123\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/me",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update current user - success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"    var jsonData = pm.response.json();\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"teacher_10_updated\",\r\n    \"password\": 12341234\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/me",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Re-login teacher_10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_10_updated\",\n    \"password\": \"12341234\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update my details - email, phoneNumber",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"    var jsonData = pm.response.json();\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"teacher_10_updated@gmail.com\",\r\n    \"phoneNumber\": \"+0721111111\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/me",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get current user details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    const responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.username).to.eq(\"teacher_10_updated\");\r",
											"    pm.expect(responseJson.email).to.eq(\"teacher_10_updated@gmail.com\");\r",
											"    pm.expect(responseJson.phoneNumber).to.eq(\"+0721111111\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/me",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2. Course - Teacher",
					"item": [
						{
							"name": "Create teacher_20",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_20\",\n    \"fullName\": \"teacher_20\",\n    \"email\": \"teacher_20@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/register/teacher",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register",
										"teacher"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login teacher_20",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_20\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create course_20 - success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Course_20\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"13:00\",\n\t\t\t\"endTime\": \"15:00\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Course course_21 - invalid name, description, maxAttendees, schedules",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\",\n\t\"description\": \"\",\n\t\"maxAttendees\": -30,\n\t\"schedules\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Course course_21 - invalid schedules",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Course_21\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"\",\n\t\t\t\"startDate\": \"01-06-2023\",\n\t\t\t\"endDate\": \"01-06-2023\",\n\t\t\t\"weekDay\": \"\",\n\t\t\t\"startTime\": \"10:00.1\",\n\t\t\t\"endTime\": \"ss\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"\",\n\t\t\t\"startDate\": \"11.01.2011\",\n\t\t\t\"endDate\": \"2024-11-20\",\n\t\t\t\"weekDay\": \"\",\n\t\t\t\"startTime\": \"00:13\",\n\t\t\t\"endTime\": \"13-29\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create course_21 - new schedules overlap each other",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Course_21\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2024\",\n\t\t\t\"endDate\": \"01.06.2024\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2024\",\n\t\t\t\"endDate\": \"01.06.2024\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"11:00\",\n\t\t\t\"endTime\": \"13:00\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create course_21 - new schedules overlap existing schedules",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Course_21\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"09:00\",\n\t\t\t\"endTime\": \"10:50\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"12:00\",\n\t\t\t\"endTime\": \"14:00\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create course_21 - success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.environment.set(\"courseId\", jsonData.id);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Course_21\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2024\",\n\t\t\t\"endDate\": \"01.06.2024\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2024\",\n\t\t\t\"endDate\": \"01.06.2024\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"13:00\",\n\t\t\t\"endTime\": \"15:00\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all created courses - not filtered by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.expect(Object.keys(pm.response.json()).length).to.eq(2);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/courses/created",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"created"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all created courses - filtered by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.expect(Object.keys(pm.response.json()).length).to.eq(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/courses/created?name=21",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"created"
									],
									"query": [
										{
											"key": "name",
											"value": "21"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update course_21 - lower maxAttendees than current one",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Course_21_updated\",\n    \"maxAttendees\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses/{{courseId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"{{courseId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update course_21 - success on name and maxAttendees",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    const responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.name).to.eq(\"Course_21_updated\");\r",
											"    pm.expect(responseJson.maxAttendees).to.eq(40);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Course_21_updated\",\n    \"maxAttendees\": 40\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses/{{courseId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"{{courseId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "3. Schedules",
					"item": [
						{
							"name": "Create teacher_30",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_30\",\n    \"fullName\": \"teacher_30\",\n    \"email\": \"teacher_30@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/register/teacher",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register",
										"teacher"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login teacher_30",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_30\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create course_30",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"    \r",
											"    pm.environment.set(\"courseId\", jsonData.id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Course_30\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"13:00\",\n\t\t\t\"endTime\": \"15:00\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create course_31",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Course_31\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2024\",\n\t\t\t\"endDate\": \"01.06.2024\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create schedule_30 - course not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    var jsonData = pm.response.json();\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Schedule_30\",\r\n    \"startDate\": \"27.11.2027\",\r\n    \"endDate\": \"27.07.2027\",\r\n    \"weekDay\": \"FRI\",\r\n    \"startTime\": \"10:00\",\r\n    \"endTime\": \"11:50\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses/{{inexistentNumber}}/schedules",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"{{inexistentNumber}}",
										"schedules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create schedule_30 - invalid fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    var jsonData = pm.response.json();\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\",\r\n    \"startDate\": \"1.11.2027\",\r\n    \"endDate\": \"11-11-2027\",\r\n    \"weekDay\": \"DAP\",\r\n    \"startTime\": \"10:0\",\r\n    \"endTime\": \"11-50\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses/{{courseId}}/schedules",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"{{courseId}}",
										"schedules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create schedule_30 - endDate before startDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    var jsonData = pm.response.json();\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Schedule_30\",\r\n    \"startDate\": \"27.11.2027\",\r\n    \"endDate\": \"27.07.2027\",\r\n    \"weekDay\": \"FRI\",\r\n    \"startTime\": \"10:00\",\r\n    \"endTime\": \"11:50\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses/{{courseId}}/schedules",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"{{courseId}}",
										"schedules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create schedule_30 - endTime before startTime",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    var jsonData = pm.response.json();\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Schedule_30\",\r\n    \"startDate\": \"27.07.2027\",\r\n    \"endDate\": \"27.11.2027\",\r\n    \"weekDay\": \"FRI\",\r\n    \"startTime\": \"12:00\",\r\n    \"endTime\": \"11:50\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses/{{courseId}}/schedules",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"{{courseId}}",
										"schedules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create schedule_30 - success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.environment.set(\"scheduleId\", jsonData.id);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Schedule_30\",\r\n    \"startDate\": \"27.07.2027\",\r\n    \"endDate\": \"27.11.2027\",\r\n    \"weekDay\": \"FRI\",\r\n    \"startTime\": \"10:00\",\r\n    \"endTime\": \"11:50\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses/{{courseId}}/schedules",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"{{courseId}}",
										"schedules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all schedules",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/schedules",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"schedules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update schedule - success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    const responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.name).to.eq(\"Schedule_30_updated\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Schedule_30_updated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/schedules/{{scheduleId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"schedules",
										"{{scheduleId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all schedules for course",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.expect(Object.keys(pm.response.json()).length).to.eq(3);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/courses/{{courseId}}/schedules",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"{{courseId}}",
										"schedules"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4. Enrollment Requests",
					"item": [
						{
							"name": "4.1 Create courses, users and enrollment requests",
							"item": [
								{
									"name": "Create teacher_41",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher_41\",\n    \"fullName\": \"teacher_41\",\n    \"email\": \"teacher_41@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/teacher",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"teacher"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create teacher_42",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher_42\",\n    \"fullName\": \"teacher_42\",\n    \"email\": \"teacher_42@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/teacher",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"teacher"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create student_41",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"student_41\",\n    \"fullName\": \"student_41\",\n    \"email\": \"student_41@gmail.com\",\n    \"phoneNumber\": \"0774657614\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/student",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"student"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create student_42",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"student_42\",\n    \"fullName\": \"student_42\",\n    \"email\": \"student_42@gmail.com\",\n    \"phoneNumber\": \"0774657614\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/student",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"student"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login teacher_41",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher_41\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create course_41",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"course41Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{jwt}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Course_41\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 1,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"13:00\",\n\t\t\t\"endTime\": \"15:00\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login teacher_42",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher_42\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create course_42",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"course42Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{jwt}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Course_42\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create course_43",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"course43Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{jwt}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Course_43\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2028\",\n\t\t\t\"endDate\": \"01.06.2028\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login student_41",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"student_41\",\r\n    \"password\": \"123123\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_41 - course not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{inexistentNumber}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{inexistentNumber}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_41 - success",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"enrollmentRequest41Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course41Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course41Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_41 - invalid, already exists",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course41Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course41Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_42 - invalid, overlap schedules",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course42Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course42Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login teacher_41",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher_41\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "4.2 Update enrollment requests",
							"item": [
								{
									"name": "Update enrollment request_41 - to declined",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"DECLINED\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest41Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest41Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update enrollment request_41 - invalid update to pending",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"PENDING\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest41Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest41Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update enrollment request_41 - to accepted",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"ACCEPTED\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest41Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest41Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update enrollment request_41 - invalid update to pending",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"PENDING\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest41Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest41Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update enrollment request_41 - invalid update to declined",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"DECLINED\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest41Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest41Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login student_41",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"student_41\",\r\n    \"password\": \"123123\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_42 - success",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"enrollmentRequest42Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course43Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course43Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login student_42",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"student_42\",\r\n    \"password\": \"123123\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_43 - success",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.environment.set(\"enrollmentRequest43Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course41Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course41Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login teacher_41",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher_41\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update enrollment request_43 - to accepted - invalid as Maximum Number Of Attendees id Reached",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"ACCEPTED\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest43Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest43Id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "4.3 Get filtered and non-filtered results and delete",
							"item": [
								{
									"name": "Get enrollment requests for course_42 - filter is null (x)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(Object.keys(pm.response.json()).length).to.eq(2);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/courses/{{course41Id}}/enrollment-requests",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"{{course41Id}}",
												"enrollment-requests"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get enrollment requests for course_42 - filter for PENDING",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(Object.keys(pm.response.json()).length).to.eq(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/courses/{{course41Id}}/enrollment-requests?status=PENDING",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"{{course41Id}}",
												"enrollment-requests"
											],
											"query": [
												{
													"key": "status",
													"value": "PENDING"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get enrollment requests for course_42 - filter for ACCEPTED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(Object.keys(pm.response.json()).length).to.eq(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/courses/{{course41Id}}/enrollment-requests?status=ACCEPTED",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"{{course41Id}}",
												"enrollment-requests"
											],
											"query": [
												{
													"key": "status",
													"value": "ACCEPTED"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Login student_41",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"student_41\",\r\n    \"password\": \"123123\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get enrollment requests for me - filter is null",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(Object.keys(pm.response.json()).length).to.eq(2);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/students/me/enrollment-requests",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"students",
												"me",
												"enrollment-requests"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get enrollment requests for me - filter for PENDING",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(Object.keys(pm.response.json()).length).to.eq(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/students/me/enrollment-requests?status=PENDING",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"students",
												"me",
												"enrollment-requests"
											],
											"query": [
												{
													"key": "status",
													"value": "PENDING"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get enrollment requests for me - filter for ACCEPTED",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(Object.keys(pm.response.json()).length).to.eq(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/students/me/enrollment-requests?status=ACCEPTED",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"students",
												"me",
												"enrollment-requests"
											],
											"query": [
												{
													"key": "status",
													"value": "ACCEPTED"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete enrollment request_41 - can't as the status is not pending",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest41Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest41Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete enrollment request_42 - success",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest42Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest42Id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "5. After Enrollment Accept",
					"item": [
						{
							"name": "5.1 Create courses and users",
							"item": [
								{
									"name": "Create teacher_51",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher_51\",\n    \"fullName\": \"teacher_51\",\n    \"email\": \"teacher_51@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/teacher",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"teacher"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create teacher_52",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher_52\",\n    \"fullName\": \"teacher_52\",\n    \"email\": \"teacher_52@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/teacher",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"teacher"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login teacher_51",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher_51\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create course_51",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"course51Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{jwt}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Course_51\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"FRI\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create course_52",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"course52Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{jwt}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Course_52\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2028\",\n\t\t\t\"endDate\": \"01.06.2028\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login teacher_52",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher_52\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create course_53",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"course53Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{jwt}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Course_53\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"13:00\",\n\t\t\t\"endTime\": \"15:00\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create course_54",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"course54Id\", jsonData.id);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Course_53\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2027\",\n\t\t\t\"endDate\": \"01.06.2027\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2027\",\n\t\t\t\"endDate\": \"01.06.2027\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"13:00\",\n\t\t\t\"endTime\": \"15:00\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create course_55",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"course55Id\", jsonData.id);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Course_53\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"13:00\",\n\t\t\t\"endTime\": \"15:00\"\n\t\t},\n        {\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create student_51",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"student_51\",\n    \"fullName\": \"student_51\",\n    \"email\": \"student_51@gmail.com\",\n    \"phoneNumber\": \"0774657614\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/student",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"student"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create student_52",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"student_52\",\n    \"fullName\": \"student_52\",\n    \"email\": \"student_52@gmail.com\",\n    \"phoneNumber\": \"0774657614\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/student",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"student"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "5.2 Create enrollment requests",
							"item": [
								{
									"name": "Login student_51",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"student_51\",\r\n    \"password\": \"123123\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_51 - course_51",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"enrollmentRequest51Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course51Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course51Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_52 - course_53",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"enrollmentRequest52Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course53Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course53Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login student_52",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"student_52\",\r\n    \"password\": \"123123\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_53 - course_53",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"enrollmentRequest53Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course53Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course53Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_54 - course_54",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"enrollmentRequest54Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course54Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course54Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_55 - course_55",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"enrollmentRequest55Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course55Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course55Id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "5.3 Update enrollment requests",
							"item": [
								{
									"name": "Login teacher_51",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher_51\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create schedule_50 - validate if students are already enrolled -> course51",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"schedule2_seminary\",\r\n    \"startDate\": \"27.11.2025\",\r\n    \"endDate\": \"27.07.2025\",\r\n    \"weekDay\": \"FRI\",\r\n    \"startTime\": \"10:00\",\r\n    \"endTime\": \"11:50\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses/{{course51Id}}/schedules",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"{{course51Id}}",
												"schedules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update enrollment request_51 - to accepted",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"ACCEPTED\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest51Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest51Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login teacher_52",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher_52\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update enrollment request_52 - to accepted",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"ACCEPTED\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest52Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest52Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update enrollment request_53 - to accepted",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"ACCEPTED\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest53Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest53Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update enrollment request_54 - to accepted",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"ACCEPTED\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest54Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest54Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update enrollment request_55 - to accepted",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"ACCEPTED\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest55Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest55Id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "5.4 Get schedules and courses",
							"item": [
								{
									"name": "Get enrolled students - - course_53 - filter is null",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(Object.keys(pm.response.json()).length).to.eq(2);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/courses/{{course53Id}}/students",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"{{course53Id}}",
												"students"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get enrolled students - - course_53 - filter is false",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(Object.keys(pm.response.json()).length).to.eq(2);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/courses/{{course53Id}}/students?graded=false",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"{{course53Id}}",
												"students"
											],
											"query": [
												{
													"key": "graded",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get enrolled students - - course_53 - filter is true",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(Object.keys(pm.response.json()).length).to.eq(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/courses/{{course53Id}}/students?graded=true",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"{{course53Id}}",
												"students"
											],
											"query": [
												{
													"key": "graded",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Login student_52",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"student_52\",\r\n    \"password\": \"123123\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all schedules for student (check count)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(Object.keys(pm.response.json()).length).to.eq(6);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/students/me/schedules",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"students",
												"me",
												"schedules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get courses enrolled to",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(Object.keys(pm.response.json()).length).to.eq(3);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/courses/enrolled",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"enrolled"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get course details - course_53",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    const responseJson = pm.response.json();\r",
													"    pm.expect(responseJson.name).to.eq(\"Course_53\");\r",
													"    pm.expect(responseJson.description).to.eq(\"Oriented object programming basic\");\r",
													"    pm.expect(responseJson.maxAttendees).to.eq(30);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/courses/{{course53Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"{{course53Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all courses",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/courses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "6. Grade",
					"item": [
						{
							"name": "6.1 Create courses and users",
							"item": [
								{
									"name": "Create student_61",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.environment.set(\"student61Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"student_61\",\n    \"fullName\": \"student_61\",\n    \"email\": \"student_61@gmail.com\",\n    \"phoneNumber\": \"0774657614\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/student",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"student"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create student_62",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.environment.set(\"student62Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"student_62\",\n    \"fullName\": \"student_62\",\n    \"email\": \"student_62@gmail.com\",\n    \"phoneNumber\": \"0774657614\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/student",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"student"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create student_63",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.environment.set(\"student63Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"student_63\",\n    \"fullName\": \"student_63\",\n    \"email\": \"student_63@gmail.com\",\n    \"phoneNumber\": \"0774657614\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/student",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"student"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create teacher_60",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"    var jsonData = pm.response.json();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher60\",\n    \"fullName\": \"teacher60\",\n    \"email\": \"teacher60@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/teacher",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"teacher"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login teacher_60",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher60\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create course_61",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"course61Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{jwt}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Course_61\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"13:00\",\n\t\t\t\"endTime\": \"15:00\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create course_62",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.environment.set(\"course62Id\", jsonData.id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{jwt}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Course_62\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"12:01\",\n\t\t\t\"endTime\": \"14:00\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"16:00\",\n\t\t\t\"endTime\": \"19:00\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "6.2 Create and update enrollment requests",
							"item": [
								{
									"name": "Login student_61",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"student_61\",\r\n    \"password\": \"123123\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_61 - course_61",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.environment.set(\"enrollmentRequest61Id\", jsonData.id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course61Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course61Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_62 - course_62",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.environment.set(\"enrollmentRequest62Id\", jsonData.id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course62Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course62Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login student_62",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"student_62\",\r\n    \"password\": \"123123\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_63 - course_61",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.environment.set(\"enrollmentRequest63Id\", jsonData.id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course61Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course61Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login student_63",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"student_63\",\r\n    \"password\": \"123123\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_64 - course_62",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.environment.set(\"enrollmentRequest64Id\", jsonData.id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course62Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course62Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login teacher_60",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher60\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update enrollment request_61",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {\r",
													"    pm.response.to.have.status(202);    \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"ACCEPTED\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest61Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest61Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update enrollment request_63",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {\r",
													"    pm.response.to.have.status(202);    \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"ACCEPTED\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest63Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest63Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update enrollment request_64",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {\r",
													"    pm.response.to.have.status(202);    \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"DECLINED\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest64Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{enrollmentRequest64Id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "6.3 Create and update grades",
							"item": [
								{
									"name": "Create grade_61 - invalid fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"courseId\": \"1\",\n    \"studentId\": \"DAP\",\n    \"score\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/grades",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"grades"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create grade_61 - student_61 - course_63 - course not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"courseId\": \"999\",\n    \"studentId\": \"1\",\n    \"score\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/grades",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"grades"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create grade_61 - student_64 - course_61 - student not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"courseId\": {{course61Id}},\n    \"studentId\": \"9999\",\n    \"score\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/grades",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"grades"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create grade_61 - student_61 - course_62 - student not enrolled",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"courseId\": {{course62Id}},\n    \"studentId\": {{student61Id}},\n    \"score\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/grades",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"grades"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create grade_61 - student_61 - course_61",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);    ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"courseId\": {{course61Id}},\n    \"studentId\": {{student61Id}},\n    \"score\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/grades",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"grades"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create grade_62 - student_61 - course_61 - student already graded",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"courseId\": {{course61Id}},\n    \"studentId\": {{student61Id}},\n    \"score\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/grades",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"grades"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create grade_62 - student_62 - course_61",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);    ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"courseId\": {{course61Id}},\n    \"studentId\": {{student62Id}},\n    \"score\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/grades",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"grades"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create grade_62 - student_63 - course_62 - student not enrolled",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);    ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"courseId\": {{student63Id}},\n    \"studentId\": {{course62Id}},\n    \"score\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/grades",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"grades"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update grade_64 - grade not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"score\": 9.5\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/grades/{{inexistentNumber}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"grades",
												"{{inexistentNumber}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update grade_61 - success",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);    ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"score\": 7.5\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/grades/{{grade61Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"grades",
												"{{grade61Id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "6.4 Get grades",
							"item": [
								{
									"name": "Get grades for course_61 - lowerBound null, upperBound null (check count)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('Number of grades returned should be 2 ', function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.equal(2);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/courses/{{course61Id}}/grades",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"{{course61Id}}",
												"grades"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get grades for course_61 - lowerBound notNull, upperBound null (check count)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('Number of grades returned should be 2', function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.equal(2);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/courses/{{course61Id}}/grades?lowerBound=5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"{{course61Id}}",
												"grades"
											],
											"query": [
												{
													"key": "lowerBound",
													"value": "5"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get grades for course_61 - lowerBound null, upperBound notNull (check count)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('Number of grades returned should be empty (zero)', function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/courses/{{course61Id}}/grades?upperBound=6",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"{{course61Id}}",
												"grades"
											],
											"query": [
												{
													"key": "upperBound",
													"value": "6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get grades for course_61 - lowerBound notNull, upperBound notNull (check count)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('Number of grades returned should be one', function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.equal(1);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/courses/{{course61Id}}/grades?lowerBound=5&upperBound=8",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"{{course61Id}}",
												"grades"
											],
											"query": [
												{
													"key": "lowerBound",
													"value": "5"
												},
												{
													"key": "upperBound",
													"value": "8"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get grade_61  (check response values)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);    ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/grades/{{grade61Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"grades",
												"{{grade61Id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "7. Security",
					"item": [
						{
							"name": "7.1 Create users",
							"item": [
								{
									"name": "Create student_71",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"student_71\",\n    \"fullName\": \"student_71\",\n    \"email\": \"student_71@gmail.com\",\n    \"phoneNumber\": \"0774657614\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/student",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"student"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create teacher_71",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"    var jsonData = pm.response.json();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher71\",\n    \"fullName\": \"teacher71\",\n    \"email\": \"teacher71@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/teacher",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"teacher"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create teacher_72",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"    var jsonData = pm.response.json();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher72\",\n    \"fullName\": \"teacher72\",\n    \"email\": \"teacher72@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/register/teacher",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"register",
												"teacher"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "7.2 Check permissions",
							"item": [
								{
									"name": "Login student_71",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"student_71\",\r\n    \"password\": \"123123\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create course_70 - Forbidden",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);    \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{studentJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{jwt}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Course_61\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"13:00\",\n\t\t\t\"endTime\": \"15:00\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login teacher_71",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher71\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create enrollment request_71 - course_71 - Forbidden",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"    var jsonData = pm.response.json();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/enrollment-requests/{{course71Id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"enrollment-requests",
												"{{course71Id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create course_71 - success",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{jwt}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Course_71\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 30,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"13:00\",\n\t\t\t\"endTime\": \"15:00\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login teacher_72",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"teacher72\",\n    \"password\": \"123123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/auth/login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update course_71 - Forbidden",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"    var jsonData = pm.response.json();\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{teacherJwt}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Course_21_updated\",\n    \"maxAttendees\": 1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/courses/{{courseId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"courses",
												"{{courseId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Testing",
			"item": [
				{
					"name": "testing Copy",
					"item": [
						{
							"name": "Create teacher_41 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_41\",\n    \"fullName\": \"teacher_41\",\n    \"email\": \"teacher_41@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/register/teacher",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register",
										"teacher"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create student_41 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"student_41\",\n    \"fullName\": \"student_41\",\n    \"email\": \"student_41@gmail.com\",\n    \"phoneNumber\": \"0774657614\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/register/student",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register",
										"student"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create student_42 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"student_42\",\n    \"fullName\": \"student_42\",\n    \"email\": \"student_42@gmail.com\",\n    \"phoneNumber\": \"0774657614\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/register/student",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register",
										"student"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create student_43",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"student_43\",\n    \"fullName\": \"student_43\",\n    \"email\": \"student_43@gmail.com\",\n    \"phoneNumber\": \"0774657614\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/register/student",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register",
										"student"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login teacher_41 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_41\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create course_41 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"    \r",
											"    pm.environment.set(\"course41Id\", jsonData.id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Course_41\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 1,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"13:00\",\n\t\t\t\"endTime\": \"15:00\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login student_41 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"student_41\",\r\n    \"password\": \"123123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login student_41 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"student_42\",\r\n    \"password\": \"123123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login student_41 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"student_43\",\r\n    \"password\": \"123123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create enrollment request_41 - success Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"    \r",
											"    pm.environment.set(\"enrollmentRequest41Id\", jsonData.id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/enrollment-requests/{{course41Id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"enrollment-requests",
										"{{course41Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login teacher_41 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_41\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update enrollment request_41 - to declined Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": \"DECLINED\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest41Id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"enrollment-requests",
										"{{enrollmentRequest41Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update enrollment request_41 - to accepted Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": \"ACCEPTED\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest41Id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"enrollment-requests",
										"{{enrollmentRequest41Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login teacher_41 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_41\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update enrollment request_43 - to accepted - invalid as Maximum Number Of Attendees id Reached Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": \"ACCEPTED\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/enrollment-requests/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"enrollment-requests",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get enrollment requests for course_41 - filter is null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.expect(Object.keys(pm.response.json()).length).to.eq(2);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/courses/{{course41Id}}/enrollment-requests",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses",
										"{{course41Id}}",
										"enrollment-requests"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "testing",
					"item": [
						{
							"name": "Create teacher_41 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_41\",\n    \"fullName\": \"teacher_41\",\n    \"email\": \"teacher_41@gmail.com\",\n    \"phoneNumber\": \"0774652624\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/register/teacher",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register",
										"teacher"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create student_41 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"student_41\",\n    \"fullName\": \"student_41\",\n    \"email\": \"student_41@gmail.com\",\n    \"phoneNumber\": \"0774657614\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/register/student",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register",
										"student"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login teacher_41 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_41\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create course_41 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"    \r",
											"    pm.environment.set(\"course41Id\", jsonData.id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Course_41\",\n\t\"description\": \"Oriented object programming basic\",\n\t\"maxAttendees\": 1,\n\t\"schedules\": [\n\t\t{\n\t\t\t\"name\": \"course\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"MON\",\n\t\t\t\"startTime\": \"10:00\",\n\t\t\t\"endTime\": \"12:00\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"laboratory\",\n\t\t\t\"startDate\": \"11.01.2026\",\n\t\t\t\"endDate\": \"01.06.2026\",\n\t\t\t\"weekDay\": \"TUE\",\n\t\t\t\"startTime\": \"13:00\",\n\t\t\t\"endTime\": \"15:00\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/courses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login student_41 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"student_41\",\r\n    \"password\": \"123123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create enrollment request_41 - success Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    var jsonData = pm.response.json();\r",
											"    \r",
											"    pm.environment.set(\"enrollmentRequest41Id\", jsonData.id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/enrollment-requests/{{course41Id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"enrollment-requests",
										"{{course41Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login teacher_41 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"teacherJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"teacher_41\",\n    \"password\": \"123123\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update enrollment request_41 - invalid update to pending Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"    var jsonData = pm.response.json();\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": \"ACCEPTED\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest41Id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"enrollment-requests",
										"{{enrollmentRequest41Id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login student_41 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"",
											"    pm.environment.set(\"studentJwt\", jsonData.jwt);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"student_41\",\r\n    \"password\": \"123123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete enrollment request_42 - success Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{studentJwt}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/enrollment-requests/{{enrollmentRequest41Id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"enrollment-requests",
										"{{enrollmentRequest41Id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://farming-simulator.pstmn.io"
		}
	]
}